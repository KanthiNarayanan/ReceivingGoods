<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.36" Name="My FxCop Project">
 <ProjectOptions>
  <PlatformAssembliesLocation>C:\Windows\Microsoft.NET\Framework\v2.0.50727</PlatformAssembliesLocation>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">c:\program files (x86)\microsoft fxcop 1.36\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <AssemblyReferenceDirectories>
   <Directory>C:/Program Files (x86)/Microsoft.NET/SDK/CompactFramework/v3.5/WindowsCE/</Directory>
  </AssemblyReferenceDirectories>
  <Target Name="$(ProjectDir)/../ReceivingGoods/CommonControls/bin/Release/CommonControls.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/../ReceivingGoods/CommonUtils/bin/Release/CommonUtils.dll" Analyze="True" AnalyzeAllChildren="True" />
  <Target Name="$(ProjectDir)/../ReceivingGoods/ReceivingGoodsUI/bin/Release/ReceivingGoodsUI.exe" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.36">
  <Namespaces>
   <Namespace Name="Kits.CommonUtils">
    <Messages>
     <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-10-04 03:43:37Z">
      <Issue Name="Namespace">
       <Item>Utils</Item>
       <Item>Kits.CommonUtils</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Kits.RecvGoods">
    <Messages>
     <Message Id="Recv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-10-04 03:43:37Z">
      <Issue Name="Namespace">
       <Item>Recv</Item>
       <Item>Kits.RecvGoods</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
   <Namespace Name="Kits.RecvGoods.UI">
    <Messages>
     <Message Id="Recv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-10-04 03:43:37Z">
      <Issue Name="Namespace">
       <Item>Recv</Item>
       <Item>Kits.RecvGoods.UI</Item>
      </Issue>
     </Message>
    </Messages>
   </Namespace>
  </Namespaces>
  <Targets>
   <Target Name="$(ProjectDir)/../ReceivingGoods/CommonControls/bin/Release/CommonControls.dll">
    <Modules>
     <Module Name="commoncontrols.dll">
      <Messages>
       <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Created="2014-10-04 03:43:37Z">
        <Issue Name="NoStrongName">
         <Item>'CommonControls.dll'</Item>
        </Issue>
       </Message>
       <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Created="2014-10-04 03:43:37Z">
        <Issue>
         <Item>'CommonControls.dll'</Item>
        </Issue>
       </Message>
       <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Created="2014-10-04 03:43:37Z">
        <Issue>
         <Item>'CommonControls.dll'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Kits.CommonControls">
        <Types>
         <Type Name="BasePanel">
          <Members>
           <Member Name="#ScreenHeaderVal">
            <Messages>
             <Message Id="Val" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-10-04 03:43:37Z">
              <Issue Name="Member">
               <Item>Val</Item>
               <Item>'BasePanel.ScreenHeaderVal'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="BorderedRoundRectangle">
          <Members>
           <Member Name="#BdrStyle">
            <Messages>
             <Message Id="Bdr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-10-04 03:43:37Z">
              <Issue Name="Member">
               <Item>Bdr</Item>
               <Item>'BorderedRoundRectangle.BdrStyle'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InitializeComponent()">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'BorderedRoundRectangle.InitializeComponent()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)">
            <Messages>
             <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'BorderedRoundRectangle.OnPaint(PaintEventArgs)'</Item>
               <Item>'pe'</Item>
               <Item>'e'</Item>
               <Item>'Control.OnPaint(PaintEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WaterMarkTextBox">
          <Messages>
           <Message Id="WaterMark" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2014-10-04 03:43:37Z">
            <Issue Name="TypeShouldBeDiscreteTerm">
             <Item>WaterMark</Item>
             <Item>'WaterMarkTextBox'</Item>
             <Item>Watermark</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#OnPaint(System.Windows.Forms.PaintEventArgs)">
            <Messages>
             <Message Id="0#" TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WaterMarkTextBox.OnPaint(PaintEventArgs)'</Item>
               <Item>'args'</Item>
               <Item>'e'</Item>
               <Item>'Control.OnPaint(PaintEventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#WaterMarkColor">
            <Messages>
             <Message Id="WaterMark" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2014-10-04 03:43:37Z">
              <Issue Name="MemberShouldBeDiscreteTerm">
               <Item>WaterMark</Item>
               <Item>'WaterMarkTextBox.WaterMarkColor'</Item>
               <Item>Watermark</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#waterMarkDisplayText">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WaterMarkTextBox.waterMarkDisplayText'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#WaterMarkText">
            <Messages>
             <Message Id="WaterMark" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2014-10-04 03:43:37Z">
              <Issue Name="MemberShouldBeDiscreteTerm">
               <Item>WaterMark</Item>
               <Item>'WaterMarkTextBox.WaterMarkText'</Item>
               <Item>Watermark</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="$(ProjectDir)/../ReceivingGoods/CommonUtils/bin/Release/CommonUtils.dll">
    <Modules>
     <Module Name="commonutils.dll">
      <Messages>
       <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Created="2014-10-04 03:43:37Z">
        <Issue Name="NoStrongName">
         <Item>'CommonUtils.dll'</Item>
        </Issue>
       </Message>
       <Message Id="Utils" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2014-10-04 03:43:37Z">
        <Issue Name="Assembly">
         <Item>Utils</Item>
         <Item>'CommonUtils.dll'</Item>
        </Issue>
       </Message>
       <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Created="2014-10-04 03:43:37Z">
        <Issue>
         <Item>'CommonUtils.dll'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Kits.CommonUtils">
        <Types>
         <Type Name="AppManager">
          <Messages>
           <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Created="2014-10-04 03:43:37Z">
            <Issue Name="ProvideDisposeBool">
             <Item>'AppManager'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.ctor(System.String)">
            <Messages>
             <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'AppManager.AppManager(string)'</Item>
               <Item>'Marshal.GetLastWin32Error()'</Item>
               <Item>&#xD;&#xA;   -&gt;'AppManager.AppManager(string)'&#xD;&#xA;   -&gt;'AppManager.AppManager(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CloseHandle(System.IntPtr)">
            <Messages>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'AppManager.CloseHandle(IntPtr)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#CreateEvent(System.IntPtr,System.Boolean,System.Boolean,System.String)">
            <Messages>
             <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'initialState'</Item>
               <Item>'AppManager.CreateEvent(IntPtr, bool, bool, string)'</Item>
              </Issue>
              <Issue>
               <Item>'manualReset'</Item>
               <Item>'AppManager.CreateEvent(IntPtr, bool, bool, string)'</Item>
              </Issue>
             </Message>
             <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'AppManager.CreateEvent(IntPtr, bool, bool, string)'</Item>
              </Issue>
             </Message>
             <Message Id="3" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Created="2014-10-04 03:43:37Z">
              <Issue Name="ParameterImplicitAnsi">
               <Item>'name'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Dispose()">
            <Messages>
             <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Created="2014-10-04 03:43:37Z">
              <Issue Name="NotCalled">
               <Item>'AppManager.Dispose()'</Item>
               <Item>'GC.SuppressFinalize(object)'</Item>
              </Issue>
             </Message>
             <Message TypeName="DisposableTypesShouldDeclareFinalizer" Category="Microsoft.Usage" CheckId="CA2216" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'AppManager'</Item>
              </Issue>
             </Message>
             <Message Id="Kits.CommonUtils.AppManager.CloseHandle(System.IntPtr)" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Created="2014-10-04 03:43:37Z">
              <Issue Name="HResultOrErrorCode">
               <Item>'AppManager.Dispose()'</Item>
               <Item>'AppManager.CloseHandle(IntPtr)'</Item>
              </Issue>
             </Message>
             <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Created="2014-10-04 03:43:37Z">
              <Issue Name="DisposeImplementation">
               <Item>'AppManager.Dispose()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WorkFlowManager">
          <Messages>
           <Message Id="WorkFlow" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2014-10-04 03:43:37Z">
            <Issue Name="TypeShouldBeDiscreteTerm">
             <Item>WorkFlow</Item>
             <Item>'WorkFlowManager'</Item>
             <Item>Workflow</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WorkFlowManager.WorkFlowManager()'</Item>
               <Item>'WorkFlowManager.activeWorkFlow'</Item>
               <Item>'WorkFlowManager'</Item>
               <Item>null</Item>
              </Issue>
              <Issue>
               <Item>'WorkFlowManager.WorkFlowManager()'</Item>
               <Item>'WorkFlowManager.mainPanelType'</Item>
               <Item>'Type'</Item>
               <Item>null</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ActiveWorkFlow">
            <Messages>
             <Message Id="WorkFlow" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2014-10-04 03:43:37Z">
              <Issue Name="MemberShouldBeDiscreteTerm">
               <Item>WorkFlow</Item>
               <Item>'WorkFlowManager.ActiveWorkFlow'</Item>
               <Item>Workflow</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#activeWorkFlowName">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WorkFlowManager.activeWorkFlowName'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#currentWorkFlowName">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WorkFlowManager.currentWorkFlowName'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InitialPanelType">
            <Messages>
             <Message TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044" Created="2014-10-04 03:43:37Z">
              <Issue Name="AddGetter">
               <Item>'WorkFlowManager.InitialPanelType'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#MainMenuPanel">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2014-10-04 03:43:37Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'WorkFlowManager.MainMenuPanel'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ShowFirstPanel(System.Type)">
            <Messages>
             <Message TypeName="CatchNonClsCompliantExceptionsInGeneralHandlers" Category="Microsoft.Security" CheckId="CA2102" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WorkFlowManager.ShowFirstPanel(Type)'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WorkFlowManager.ShowFirstPanel(Type)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ShowNextPanel(System.Type)">
            <Messages>
             <Message TypeName="CatchNonClsCompliantExceptionsInGeneralHandlers" Category="Microsoft.Security" CheckId="CA2102" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WorkFlowManager.ShowNextPanel(Type)'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WorkFlowManager.ShowNextPanel(Type)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ShowPreviousPanel()">
            <Messages>
             <Message TypeName="CatchNonClsCompliantExceptionsInGeneralHandlers" Category="Microsoft.Security" CheckId="CA2102" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WorkFlowManager.ShowPreviousPanel()'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WorkFlowManager.ShowPreviousPanel()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2014-10-04 03:43:37Z">
              <Issue Name="TooGeneric">
               <Item>'WorkFlowManager.ShowPreviousPanel()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ShowPreviousPanel(System.String)">
            <Messages>
             <Message TypeName="CatchNonClsCompliantExceptionsInGeneralHandlers" Category="Microsoft.Security" CheckId="CA2102" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WorkFlowManager.ShowPreviousPanel(string)'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'WorkFlowManager.ShowPreviousPanel(string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="WorkFlowManager+FlowAction">
          <Messages>
           <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Created="2014-10-04 03:43:37Z">
            <Issue>
             <Item>'WorkFlowManager.FlowAction'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
   <Target Name="$(ProjectDir)/../ReceivingGoods/ReceivingGoodsUI/bin/Release/ReceivingGoodsUI.exe">
    <Modules>
     <Module Name="receivinggoodsui.exe">
      <Messages>
       <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Created="2014-10-04 03:43:37Z">
        <Issue Name="NoStrongName">
         <Item>'ReceivingGoodsUI.exe'</Item>
        </Issue>
       </Message>
       <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Created="2014-10-04 03:43:37Z">
        <Issue>
         <Item>'ReceivingGoodsUI.exe'</Item>
        </Issue>
       </Message>
       <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Created="2014-10-04 03:43:37Z">
        <Issue>
         <Item>'ReceivingGoodsUI.exe'</Item>
        </Issue>
       </Message>
       <Message TypeName="MarkWindowsFormsEntryPointsWithStaThread" Category="Microsoft.Usage" CheckId="CA2232" Created="2014-10-04 03:43:37Z">
        <Issue>
         <Item>'Program.Main()'</Item>
         <Item>'ReceivingGoodsUI.exe'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="Kits.RecvGoods">
        <Types>
         <Type Name="Program">
          <Members>
           <Member Name="#Main()">
            <Messages>
             <Message TypeName="CatchNonClsCompliantExceptionsInGeneralHandlers" Category="Microsoft.Security" CheckId="CA2102" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'Program.Main()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Kits.RecvGoods.UI">
        <Types>
         <Type Name="EnterASNScreen">
          <Messages>
           <Message Id="ASN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Created="2014-10-04 03:43:37Z">
            <Issue Name="Type">
             <Item>ASN</Item>
             <Item>'EnterASNScreen'</Item>
             <Item>Asn</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="MainForm">
          <Members>
           <Member Name="#menuItem1_Click(System.Object,System.EventArgs)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'MainForm.menuItem1_Click(object, EventArgs)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SplashForm">
          <Members>
           <Member Name="#timer">
            <Messages>
             <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Created="2014-10-04 03:43:37Z">
              <Issue>
               <Item>'SplashForm.timer'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="Kits.RecvGoods.UI.Resources">
        <Types>
         <Type Name="Resources">
          <Messages>
           <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Created="2014-10-04 03:43:37Z">
            <Issue>
             <Item>'Resources'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="UIResources">
          <Messages>
           <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Created="2014-10-04 03:43:37Z">
            <Issue>
             <Item>'UIResources'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
    <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
    <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
    <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
    <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   </Rule>
   <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
    <Resolution Name="NotCalled">Change {0} to call {1}. This will prevent unnecessary finalization of the object once it has been disposed and it has fallen out of scope.</Resolution>
   </Rule>
   <Rule TypeName="CatchNonClsCompliantExceptionsInGeneralHandlers" Category="Microsoft.Security" CheckId="CA2102">
    <Resolution Name="Default">{0} is defined in an assembly that is not marked RuntimeCompatibility(WrapNonExceptionThrows = true) and defines a catch(Exception) handler that is not matched with a generic catch clause (catch{{}} in C#, catch(System::Object*){{}} in mc++) for non-CLSCompliant exceptions. Either mark the assembly as RuntimeCompatibility(WrapNonExceptionThrows = true), eliminate the catch(Exception) clause by catching a specific set of Exceptions or add a generic catch handler that duplicates the code contained within the catch(Exception) handler.</Resolution>
   </Rule>
   <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
    <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="DisposableTypesShouldDeclareFinalizer" Category="Microsoft.Usage" CheckId="CA2216">
    <Resolution Name="Default">Implement a finalizer or destructor on {0}.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
    <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   </Rule>
   <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
    <Resolution Name="HResultOrErrorCode">{0} calls {1} but does not use the HRESULT or error code that the method returns. This could lead to unexpected behavior in error conditions or low-resource situations. Use the result in a conditional statement, assign the result to a variable, or pass it as an argument to another method.</Resolution>
   </Rule>
   <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
    <Resolution Name="Default">{0} calls into {1} which has a LinkDemand. By making this call, {1} is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: {2}</Resolution>
   </Rule>
   <Rule TypeName="DoNotInitializeUnnecessarily" Category="Microsoft.Performance" CheckId="CA1805">
    <Resolution Name="Default">{0} initializes field {1} of type {2} to {3}. Remove this initialization because it will be done automatically by the runtime.</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
    <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
    <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
    <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
    <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   </Rule>
   <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
    <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
    <Resolution Name="ProvideDisposeBool">Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Resolution>
   </Rule>
   <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
    <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   </Rule>
   <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
    <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   </Rule>
   <Rule TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414">
    <Resolution Name="Default">Add the MarshalAsAttribute to parameter {0} of P/Invoke {1}. If the corresponding unmanaged parameter is a 4-byte Win32 'BOOL', use [MarshalAs(UnmanagedType.Bool)]. For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Resolution>
   </Rule>
   <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
    <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   </Rule>
   <Rule TypeName="MarkWindowsFormsEntryPointsWithStaThread" Category="Microsoft.Usage" CheckId="CA2232">
    <Resolution Name="Default">Mark the entry point method {0} in assembly {1} with an STAThreadAttribute.</Resolution>
   </Rule>
   <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
    <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   </Rule>
   <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
    <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   </Rule>
   <Rule TypeName="ParameterNamesShouldMatchBaseDeclaration" Category="Microsoft.Naming" CheckId="CA1725">
    <Resolution Name="Default">In member {0}, change parameter name {1} to {2} in order to match the identifier as it has been declared in {3}.</Resolution>
   </Rule>
   <Rule TypeName="PropertiesShouldNotBeWriteOnly" Category="Microsoft.Design" CheckId="CA1044">
    <Resolution Name="AddGetter">Because property {0} is write-only, either add a property getter with an accessibility that is greater than or equal to its setter or convert this property into a method.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
    <Resolution Name="ParameterImplicitAnsi">To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
